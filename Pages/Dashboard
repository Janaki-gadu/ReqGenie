import React, { useState, useEffect } from "react";
import { Project } from "@/entities/Project";
import { Requirement } from "@/entities/Requirement";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { 
  Plus, 
  MessageSquare, 
  FileText, 
  TrendingUp, 
  Users,
  Sparkles,
  Clock,
  CheckCircle
} from "lucide-react";
import { format } from "date-fns";

import ProjectCard from "../components/dashboard/ProjectCard";
import StatsOverview from "../components/dashboard/StatsOverview";
import RecentActivity from "../components/dashboard/RecentActivity";

export default function Dashboard() {
  const [projects, setProjects] = useState([]);
  const [requirements, setRequirements] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    setIsLoading(true);
    const [projectsData, requirementsData] = await Promise.all([
      Project.list("-updated_date"),
      Requirement.list("-updated_date", 10)
    ]);
    setProjects(projectsData);
    setRequirements(requirementsData);
    setIsLoading(false);
  };

  const createNewProject = async () => {
    const projectName = prompt("Enter project name:");
    if (projectName) {
      await Project.create({ name: projectName, description: `${projectName} requirements gathering` });
      loadData();
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/50 p-6">
      <div className="max-w-7xl mx-auto space-y-8">
        {/* Header */}
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-6">
          <div>
            <h1 className="text-4xl font-bold text-slate-900 mb-2">
              Welcome to RequireAI
            </h1>
            <p className="text-lg text-slate-600 max-w-2xl">
              Streamline requirement gathering with our intelligent 3-agent AI system. 
              Let AI help you collect, validate, and document requirements seamlessly.
            </p>
          </div>
          <div className="flex gap-3">
            <Link to={createPageUrl("Meeting")}>
              <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 shadow-lg shadow-blue-500/20 transition-all duration-200">
                <MessageSquare className="w-5 h-5 mr-2" />
                Start Virtual Meeting
              </Button>
            </Link>
            <Button 
              variant="outline" 
              onClick={createNewProject}
              className="border-slate-200 hover:bg-slate-50"
            >
              <Plus className="w-5 h-5 mr-2" />
              New Project
            </Button>
          </div>
        </div>

        {/* Stats Overview */}
        <StatsOverview projects={projects} requirements={requirements} isLoading={isLoading} />

        {/* Main Content */}
        <div className="grid lg:grid-cols-3 gap-8">
          {/* Projects List */}
          <div className="lg:col-span-2">
            <Card className="bg-white/80 backdrop-blur-sm border-slate-200/60 shadow-lg shadow-slate-200/20">
              <CardHeader className="border-b border-slate-200/60">
                <div className="flex justify-between items-center">
                  <CardTitle className="text-xl font-bold text-slate-900">
                    Active Projects
                  </CardTitle>
                  <Badge variant="secondary" className="bg-blue-50 text-blue-700">
                    {projects.length} Total
                  </Badge>
                </div>
              </CardHeader>
              <CardContent className="p-6">
                {isLoading ? (
                  <div className="space-y-4">
                    {Array(3).fill(0).map((_, i) => (
                      <div key={i} className="animate-pulse bg-slate-100 rounded-xl h-24"></div>
                    ))}
                  </div>
                ) : projects.length > 0 ? (
                  <div className="space-y-4">
                    {projects.map((project) => (
                      <ProjectCard 
                        key={project.id} 
                        project={project} 
                        requirements={requirements.filter(r => r.project_id === project.id)}
                      />
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-12">
                    <div className="w-16 h-16 bg-gradient-to-r from-blue-100 to-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
                      <Plus className="w-8 h-8 text-blue-600" />
                    </div>
                    <h3 className="text-lg font-semibold text-slate-900 mb-2">No projects yet</h3>
                    <p className="text-slate-500 mb-4">Create your first project to start gathering requirements</p>
                    <Button onClick={createNewProject} className="bg-blue-600 hover:bg-blue-700">
                      <Plus className="w-4 h-4 mr-2" />
                      Create First Project
                    </Button>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            <RecentActivity requirements={requirements} isLoading={isLoading} />
            
            {/* AI Features Card */}
            <Card className="bg-gradient-to-br from-purple-50 to-blue-50 border-purple-200/60">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-purple-900">
                  <Sparkles className="w-5 h-5" />
                  AI-Powered Features
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-3">
                  <div className="flex items-start gap-3">
                    <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center mt-0.5">
                      <MessageSquare className="w-4 h-4 text-blue-600" />
                    </div>
                    <div>
                      <h4 className="font-semibold text-slate-900">Smart Collection</h4>
                      <p className="text-sm text-slate-600">Voice, text, and visual requirement capture</p>
                    </div>
                  </div>
                  <div className="flex items-start gap-3">
                    <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center mt-0.5">
                      <CheckCircle className="w-4 h-4 text-green-600" />
                    </div>
                    <div>
                      <h4 className="font-semibold text-slate-900">Auto Validation</h4>
                      <p className="text-sm text-slate-600">Detect conflicts and align with business rules</p>
                    </div>
                  </div>
                  <div className="flex items-start gap-3">
                    <div className="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mt-0.5">
                      <FileText className="w-4 h-4 text-purple-600" />
                    </div>
                    <div>
                      <h4 className="font-semibold text-slate-900">Smart Documentation</h4>
                      <p className="text-sm text-slate-600">Generate SRS/BRD automatically</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}
