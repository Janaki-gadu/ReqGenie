
import React, { useState, useEffect, useCallback } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Requirement } from "@/entities/Requirement";
import { FileText, CheckCircle, Clock } from "lucide-react";

export default function RequirementCapture({ selectedProject }) {
  const [requirements, setRequirements] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  const loadRequirements = useCallback(async () => {
    if (!selectedProject) return;
    
    setIsLoading(true);
    // Ensure project_id is available before calling filter
    if (selectedProject.id) { 
      const data = await Requirement.filter({ project_id: selectedProject.id }, "-updated_date");
      setRequirements(data);
    } else {
      setRequirements([]); // Clear requirements if project_id is not valid
    }
    setIsLoading(false);
  }, [selectedProject]); // loadRequirements will re-create if selectedProject changes

  useEffect(() => {
    loadRequirements();
  }, [loadRequirements]); // useEffect runs when loadRequirements (and thus selectedProject) changes

  const statusColors = {
    draft: "bg-yellow-100 text-yellow-800",
    clarified: "bg-blue-100 text-blue-800", 
    validated: "bg-green-100 text-green-800",
    approved: "bg-purple-100 text-purple-800"
  };

 
